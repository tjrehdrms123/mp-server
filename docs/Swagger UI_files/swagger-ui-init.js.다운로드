
window.onload = function() {
  // Build a system
  var url = window.location.search.match(/url=([^&]+)/);
  if (url && url.length > 1) {
    url = decodeURIComponent(url[1]);
  } else {
    url = window.location.origin;
  }
  var options = {
  "swaggerDoc": {
    "info": {
      "title": "MP API",
      "version": "1.0.0",
      "description": "MP"
    },
    "host": "localhost:3061",
    "basePath": "/",
    "servers": [
      {
        "url": "http://localhost:3061"
      }
    ],
    "swagger": "2.0",
    "paths": {
      "/auth/email": {
        "post": {
          "tags": [
            "email"
          ],
          "summary": "유저 메일 인증",
          "description": "유저 메일 인증",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Body",
              "required": true,
              "description": null,
              "schema": {
                "$ref": "#/definitions/AuthEmail"
              }
            }
          ]
        }
      },
      "/page": {
        "get": {
          "tags": [
            "page"
          ],
          "summary": "추억 전체 가져오기",
          "description": "추억 전체 가져오기",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": true,
              "description": "Bearer AccessToken"
            }
          ]
        },
        "post": {
          "tags": [
            "page"
          ],
          "summary": "추억 등록하기",
          "description": "추억 등록하기",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": true,
              "description": null,
              "schema": {
                "$ref": "#/definitions/UserLogin"
              }
            },
            {
              "in": "body",
              "name": "Body",
              "required": true,
              "description": null,
              "schema": {
                "$ref": "#/definitions/PageCreate"
              }
            }
          ]
        }
      },
      "/page/:id": {
        "get": {
          "tags": [
            "page"
          ],
          "summary": "한개 추억 가져오기",
          "description": "한개 추억 가져오기",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": true,
              "description": "Bearer AccessToken"
            }
          ]
        },
        "patch": {
          "tags": [
            "page"
          ],
          "summary": "추억 수정하기",
          "description": "추억 수정하기",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": true,
              "description": "Bearer AccessToken"
            },
            {
              "in": "body",
              "name": "Body",
              "required": true,
              "description": null,
              "schema": {
                "$ref": "#/definitions/PageUpdate"
              }
            }
          ]
        },
        "delete": {
          "tags": [
            "page"
          ],
          "summary": "추억 삭제하기",
          "description": "추억 삭제하기",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": true,
              "description": "Bearer AccessToken"
            }
          ]
        }
      },
      "/token/validation": {
        "post": {
          "tags": [
            "token"
          ],
          "summary": "토큰 검증",
          "description": "Bearer Token:accessToken을 검증",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": true,
              "description": "Bearer AccessToken"
            }
          ]
        }
      },
      "/token/validation/refresh": {
        "post": {
          "tags": [
            "token"
          ],
          "summary": "refresh 토큰 검증",
          "description": "refresh 토큰 검증",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": true,
              "description": "user sessionToken"
            }
          ]
        }
      },
      "/token/reissuance": {
        "post": {
          "tags": [
            "token"
          ],
          "summary": "refresh,access 토큰 재 발급",
          "description": "refresh refresh,access 토큰 재 발급",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "header",
              "name": "authorization",
              "required": true,
              "description": "user sessionToken"
            }
          ]
        }
      },
      "/user/signup": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "유저 회원가입",
          "description": "유저 회원가입",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Body",
              "required": true,
              "description": null,
              "schema": {
                "$ref": "#/definitions/UserSignUp"
              }
            }
          ]
        }
      },
      "/user/login": {
        "post": {
          "tags": [
            "user"
          ],
          "summary": "유저 로그인",
          "description": "유저 로그인",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "in": "body",
              "name": "Body",
              "required": true,
              "description": null,
              "schema": {
                "$ref": "#/definitions/UserLogin"
              }
            }
          ]
        }
      }
    },
    "definitions": {
      "UserSignUp": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "string",
            "example": "유저 아이디"
          },
          "name": {
            "type": "string",
            "example": "유저 이름"
          },
          "email": {
            "type": "string",
            "example": "이메일"
          },
          "password": {
            "type": "string",
            "example": "비밀번호"
          },
          "auth_type": {
            "type": "number",
            "example": "인증 타입(0 = 일반, 1 = 카카오, 2 = 구글)"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "uid": {
            "type": "String",
            "example": "유저 아이디"
          },
          "password": {
            "type": "String",
            "example": "유저 비밀번호"
          },
          "auth_type": {
            "type": "number",
            "example": "인증 타입(0 = 일반, 1 = 카카오, 2 = 구글)"
          },
          "email_auth_code": {
            "type": "String",
            "example": "as1d321asd321as321dasc325a87c366fe20e"
          }
        }
      },
      "AuthEmail": {
        "type": "object",
        "properties": {
          "email": {
            "type": "String",
            "example": "유저 이메일"
          }
        }
      },
      "PageCreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "String",
            "example": "제목 글"
          },
          "description": {
            "type": "String",
            "example": "설명 글"
          },
          "writer": {
            "type": "String",
            "example": "글쓴이"
          },
          "lat": {
            "type": "Number",
            "example": "좌표"
          },
          "lng": {
            "type": "Number",
            "example": "좌표"
          },
          "auth_id": {
            "type": "Pointer",
            "example": "<user>.ObjectId"
          },
          "markerimg": {
            "type": "File",
            "example": "base64 format img"
          }
        }
      },
      "PageUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "String",
            "example": "제목 글"
          },
          "description": {
            "type": "String",
            "example": "설명 글"
          },
          "writer": {
            "type": "String",
            "example": "글쓴이"
          },
          "lat": {
            "type": "Number",
            "example": "좌표"
          },
          "lng": {
            "type": "Number",
            "example": "좌표"
          },
          "auth_id": {
            "type": "Pointer",
            "example": "<user>.ObjectId"
          },
          "markerimg": {
            "type": "File",
            "example": "base64 format img"
          }
        }
      }
    },
    "responses": {},
    "parameters": {},
    "securityDefinitions": {},
    "tags": []
  },
  "customOptions": {}
};
  url = options.swaggerUrl || url
  var urls = options.swaggerUrls
  var customOptions = options.customOptions
  var spec1 = options.swaggerDoc
  var swaggerOptions = {
    spec: spec1,
    url: url,
    urls: urls,
    dom_id: '#swagger-ui',
    deepLinking: true,
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    layout: "StandaloneLayout"
  }
  for (var attrname in customOptions) {
    swaggerOptions[attrname] = customOptions[attrname];
  }
  var ui = SwaggerUIBundle(swaggerOptions)

  if (customOptions.oauth) {
    ui.initOAuth(customOptions.oauth)
  }

  if (customOptions.authAction) {
    ui.authActions.authorize(customOptions.authAction)
  }

  window.ui = ui
}
